# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

### Playbook Documentation ###
#
# #### playbooks/configure_host_only_vlans.yml
#
# NOTE: For internal Samsung / DSS use! Unsupported!
#
# Execute this playbook to automatically configure host-side-only VLANs.
#
# This playbook will configure host-side RoCEv2 VLANs. VLANs will need to be manually tagged on the switch
#
# Hosts that are configured with this playbook need to have both "rocev2_ip_list" list and "rocev2_vlan_interfaces" list of dictionaries defined in inventory.
# The combination of these two vars will result in the desired host-side VLAN configuration.
#
# Example vars for a host:
#     rocev2_ip_list=['192.168.1.1']
#     rocev2_vlan_interfaces=[{'interface': 'ens224', 'vlan_id': 31}]
#
# The above configuration for a host will result in interface `ens224` being configured with a child VLAN `ens224.31`, tagged with VLAN ID 31.
# Note that the `rocev2_ip_list` and `rocev2_vlan_interfaces` lists must contain an equal number of elements.
#
# Note that multiple VLANs may be configured on a single physical interface. Simply list the additional VLAN with repeating `interface` key.
# Example:
#     rocev2_ip_list=['192.168.1.1', '192.168.1.2']
#     rocev2_vlan_interfaces=[{'interface': 'ens224', 'vlan_id': 31}, {'interface': 'ens224', 'vlan_id': 32}]
#
# Note that if all hosts intend to use the same interface names for all respective VLAN IDs, the `rocev2_vlan_interfaces` var may be defined
# a single time as a group var, rather than for every host in inventory.
#
# VLANs can be tuned by configuring the following vars (default values shown):
#
# * mtu_size - MTU Size of parent and child adapters (default 9000)
# * rocev2_vlan_interfaces - List of VLAN interfaces to configure. Must contain dicts with keys `interface` and `vlan_id` (default [])
# * rocev2_netmask - Netmask of VLAN interfaces (default "255.255.255.0")
# * vlan_egress_prio_map_second_tuple - Enable / Disable the second tuple of VLAN_EGRESS_PRIO_MAP (default true)
#
# The logic for VLAN_EGRESS/INGRESS_PRIO_MAP is as follows:
# "Priority" is determined by the first digit of the VLAN ID.
# For example, a VLAN ID "31" will have a "priority" of 3.
# This will result in the following settings in the ifcfg script for the configured child VLAN interface:
#   VLAN_EGRESS_PRIO_MAP setting=0:3,3:3
#   VLAN_INGRESS_PRIORITY_MAP=3:3
# If the `vlan_egress_prio_map_second_tuple` var is set to `false`, then only the first tuple of VLAN_EGRESS_PRIO_MAP will be configured:
#   VLAN_EGRESS_PRIO_MAP setting=0:3

- name: Validate ansible versions and dependencies
  hosts: localhost
  roles:
    - validate_ansible

- name: Configure host-only VLANs
  hosts:
    - servers
    - targets
    - hosts
    - clients
  roles:
    - configure_host_only_vlans
