#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in
#        the documentation and/or other materials provided with the
#        distribution.
#      * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#        its contributors may be used to endorse or promote products derived
#        from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

### Playbook Documentation ###
#
# #### playbooks/start_datamover.yml
#
# Execute this playbook to start the datamover accross all [clients].
#
# By default, "start_datamover" will execute a PUT operation, uploading all files from your configured NFS shares to the MinIO object store.
# Also by default, compaction will run once PUT is complete.
# Please review the "Datamover Settings" section of "group_vars/all.yml"
# It is critical to set the "datamover_nfs_shares" to match your environment.
# IPV4, IPV6, or resolvable hostnames are accepted for the "ip" key.
#
# Additional operations supported by "start_datamover: PUT, GET, DEL, LIST, TEST
#
# * PUT: Upload files from NFS shares to object store
# * GET: Download files from object store to a shared mountpoint on all [clients]
# * LIST: List objects on object store. Produces a count of objects on object store, and saves a list of objects to a default location.
# * DEL: Delete all objects on object store, previously uploaded by datamover.
# * TEST: Perform a checksum validation test of all objects on object store, compared to files on NFS shares.
#
# This playbook has a number of user-definable variables that can be set from the command line to run the operation you choose:
#
# * datamover_operation: PUT
# * datamover_dryrun: false
# * datamover_skip_upload: false
# * datamover_compaction: true
# * datamover_prefix: ''
# * datamover_get_path: "{{ ansible_env.HOME }}/datamover"
#
# Explanation of configurable vars:
#
# * datamover_operation - Datamover operation, one of PUT, GET, DEL, LIST, or TEST
# * datamover_dryrun - Execute datamove operation without making changes (applies to PUT, GET, DEL)
# * datamover_skip_upload - If `true`, do not upload during datamover TEST operation. Data must already be uploaded
# * datamover_compaction - Execute target compaction on each node after PUT, DEL, or TEST operations. Should always be set to `true`
# * datamover_prefix - Prefix of path to perform datamover operation on a subset of the total number of objects
# * datamover_get_path - Path to download objects during GET and TEST operations. For GET, path should be a shared mountpoint on all [clients] hosts
#
# For example, to execute datamover GET operation to a writable, shared mount point across all [clients]:
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=GET datamover_get_path=/path/to/share/'
#
# Datamover PUT examples:
#     ansible-playbook -i <your_inventory> playbooks/start_datamover
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=PUT'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=PUT datamover_dryrun=true'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_prefix=192.168.1.1/mnt/share/folder'
#
# Datamover LIST examples:
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=LIST'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=LIST datamover_list_path=/var/log/datamover'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=LIST datamover_prefix=192.168.1.1/mnt/share/folder'
#
# Datamover DEL examples:
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=DEL'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=DEL datamover_dryrun=true'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=DEL datamover_prefix=192.168.1.1/mnt/share/folder/'
#
# Datamover GET examples:
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=GET'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=GET datamover_dryrun=true'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=GET datamover_get_path=/mnt/dir/'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=GET datamover_prefix=192.168.1.1/mnt/share/folder/'
#
# Datamover TEST examples (Data integrity):
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=TEST'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=TEST datamover_get_path=/mnt/dir/'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=TEST datamover_get_path=/mnt/dir/ datamover_skip_upload=true'
#     ansible-playbook -i <your_inventory> playbooks/start_datamover -e 'datamover_operation=TEST datamover_prefix=192.168.1.1/mnt/share/folder/'
#
# For additional documentation, please consult the datamover README.md file, located on all [clients]:
# > /usr/dss/nkv-datamover/README.md


- name: Validate ansible versions and dependencies
  hosts: localhost
  roles:
    - validate_ansible

- name: Get TCP VLAN IP List
  hosts:
    - servers
    - clients
    - ufm_hosts
  roles:
    - get_tcp_vlan_ip_list

- name: Set client library config
  hosts: servers
  gather_facts: false
  roles:
    - configure_server_mc_alias
    - create_client_library_conf

- name: Start Datamover
  hosts: clients
  gather_facts: false
  roles:
    - start_datamover
