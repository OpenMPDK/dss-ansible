#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Find a host that has a defined combined_interface_switch_vlan_map
  set_fact:
    combined_interface_switch_vlan_map: "{{ hostvars[host]['combined_interface_switch_vlan_map'] }}"
  loop: "{{ (groups['clients'] | d([]) + groups['servers'] | d([]) + groups['targets'] | d([]) + groups['hosts'] | d([])) | unique }}"
  loop_control:
    loop_var: host
  when:
    - hostvars[host]['combined_interface_switch_vlan_map'] is defined
    - combined_interface_switch_vlan_map is not defined

- name: Assert combined_interface_switch_vlan_map is defined
  assert:
    that: combined_interface_switch_vlan_map is defined
    fail_msg: Unable to obtain a list of MAC addresses from hosts. Check for playbook failures.
    quiet: true

- name: Enable PFC
  onyx_config:
    lines:
      - dcb priority-flow-control enable force

- name: Set pfc_prio_list
  set_fact:
    pfc_prio_list: "{% for vlan in (rocev2_vlans + tcp_vlans) | map(attribute='id') | list %}[ {{ (vlan | string)[0] }} ] + {% endfor %}[ 0 ]"

- name: Set PFC priorities
  onyx_config:
    lines:
      - "dcb priority-flow-control priority {{ item }} enable"
  loop: "{{ pfc_prio_list | unique }}"

- name: Configure TCP VLANs
  onyx_vlan:
    vlan_id: "{{ item.id }}"
    name: "TCP_vlan{{ item.id }}"
  loop: "{{ tcp_vlans }}"
  loop_control:
    label: "{{ item.id }}"

- name: Configure RoCEv2 VLANs
  onyx_vlan:
    vlan_id: "{{ item.id }}"
    name: "RoCE_vlan{{ item.id }}"
  loop: "{{ rocev2_vlans }}"
  loop_control:
    label: "{{ item.id }}"

- name: Configure interfaces
  onyx_config:
    lines:
      - "interface ethernet {{ link.switch_port }} switchport mode hybrid"
      - "interface ethernet {{ link.switch_port }} switchport hybrid allowed-vlan add {{ link.vlan_id }}"
      - "interface ethernet {{ link.switch_port }} qos trust L2"
      - "interface ethernet {{ link.switch_port }} traffic-class 3 congestion-control ecn minimum-absolute 150 maximum-absolute 1500"
    save: true
  loop: "{{ combined_interface_switch_vlan_map }}"
  loop_control:
    loop_var: link
    label: "Eth{{ link.switch_port }}, VLAN ID {{ link.vlan_id }}"
  when: link.switch_name == inventory_hostname

- name: Enable PFC
  onyx_pfc_interface:
    name: "Eth{{ link.switch_port }}"
    state: enabled
  loop: "{{ combined_interface_switch_vlan_map }}"
  loop_control:
    loop_var: link
    label: "Eth{{ link.switch_port }}, VLAN ID {{ link.vlan_id }}"
  when: link.switch_name == inventory_hostname

- name: Configure MTU
  onyx_interface:
    name: "Eth{{ link.switch_port }}"
    mtu: "{{ mtu_size }}"
  loop: "{{ combined_interface_switch_vlan_map }}"
  loop_control:
    loop_var: link
    label: "Eth{{ link.switch_port }}, VLAN ID {{ link.vlan_id }}"
  when: link.switch_name == inventory_hostname
