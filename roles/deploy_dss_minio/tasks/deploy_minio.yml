# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Install minio dependencies
  yum:
    name: "{{ item }}"
  loop:
    - numactl
  when: >
    (inventory_hostname in groups['servers'] | d([]) or
    inventory_hostname in groups['hosts'] | d([])) and
    not no_minio | d(false)
  become: true

- name: Identify host tarball
  find:
    path: "{{ artifacts_dir }}"
    patterns: 'dss-minio-bin-*.tgz'
  delegate_to: localhost
  run_once: true
  register: minio_tgz

- name: Assert minio tarball found
  assert:
    that: minio_tgz.files | length > 0
    fail_msg: "No minio tarball found. Please download tarball to {{ artifacts_dir }}"

- name: Create minio destination path
  file:
    path: "{{ minio_dir }}"
    state: directory
    mode: 0755
  become: true

- name: Deploy minio from tarball
  unarchive:
    src: "{{ (minio_tgz.files | sort(attribute='ctime', reverse=true) | first).path }}"
    dest: "{{ minio_dir }}"
    owner: root
    group: root
    mode: 0555
  become: true

- name: Create minio symlink to host bin dir
  file:
    src: "{{ minio_dir }}/minio"
    dest: "{{ nkv_sdk_bin_dir }}/minio"
    state: link
  when:
    - inventory_hostname in groups['servers'] | d([]) or inventory_hostname in groups['hosts'] | d([])
    - not is_benchmark | d(false)
    - not no_minio | d(false)
  become: true

- name: Create log dir
  file:
    path: "{{ dss_log_dir }}"
    state: directory
    mode: 0755
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
  become: true
