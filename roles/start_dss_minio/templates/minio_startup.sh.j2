#!/bin/bash
#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
{% set num_mountpoints = { 'value': 0 } %}
{% if standalone_minio is defined %}
    {%- for vlan in vlan_ip_map -%}
        {%- if num_mountpoints.update({ 'value': num_mountpoints.value + (subsys_range[loop.index0].max | int - subsys_range[loop.index0].min | int + 1) }) %}{% endif -%}
    {% endfor %}
{% else %}
    {% if num_mountpoints.update({ 'value': num_mountpoints.value + (my_range.max | int - my_range.min | int + 1) }) %}{% endif %}
{% endif %}

export LD_LIBRARY_PATH="{{ start_dss_minio_host_dir }}/lib"
export MINIO_NKV_CONFIG="{{ start_dss_minio_host_dir }}/conf/nkv_config.json"
{% if standalone_minio is defined %}#{% endif %}export MINIO_INSTANCE_HOST_PORT={{ tcp_ip }}:{{ minio_port }}
export MINIO_ACCESS_KEY={{ minio_access_key }}
export MINIO_SECRET_KEY={{ minio_secret_key }}

export MINIO_STORAGE_CLASS_STANDARD=EC:{{ minio_ec }}
export MINIO_NKV_MAX_VALUE_SIZE={{ (((minio_ec_block_size | int) / ((num_mountpoints.value) - minio_ec | int) / 32) | round(0, 'ceil') * 32) | int }}
export MINIO_NKV_TIMEOUT={{ minio_nkv_timeout }}
export MINIO_NKV_SYNC={{ minio_nkv_sync }}
export MINIO_NKV_SHARED_SYNC_INTERVAL={{ minio_nkv_shared_sync_interval }}
export MINIO_ENABLE_ZERO_COPY_READER={{ minio_enable_zero_copy_reader }}
export MINIO_EC_BLOCK_SIZE={{ minio_ec_block_size }}
export MINIO_ENABLE_NO_LOCK_READ={{ minio_enable_no_lock_read }}
#export MINIO_ENABLE_NO_READ_VERIFY={{ minio_enable_no_read_verify }}
export MINIO_NKV_USE_CUSTOM_READER={{ minio_nkv_use_custom_reader }}
export MINIO_ENABLE_NO_LOCK_WRITE={{ minio_no_lock_write }}
export MINIO_ENABLE_OPT_WRITE={{ minio_opt_write }}
export MINIO_ENABLE_NON_TRANSACTIONAL_WRITE={{ minio_non_transactional_write }}
export MINIO_DISABLE_META_STAT={{ minio_disable_meta_stat }}
export MINIO_ON_KV={{ minio_on_kv }}
export MINIO_DISABLE_EC={{ minio_disable_ec }}
export MINIO_KV_MAX_SIZE={{ minio_kv_max_size }}
{% if standalone_minio is defined %}#{% endif %}export MINIO_NKV_SHARED={{ minio_nkv_shared }}
#export MINIO_NKV_CHECKSUM={{ minio_nkv_checksum }}

ulimit -n 65535
ulimit -c unlimited

{% if num_numa_nodes | int > 1 -%}
    numactl -N {{ numa_node }} -i {{ numa_node }},{{ adjacent_numa }}{{ ' '}}
{%- endif -%}
{{ start_dss_minio_dir }}/minio server{% if standalone_minio is not defined %} --address {{ tcp_ip }}:{{ minio_port }}{% endif %}
{%- for vlan in combined_vlan_ip_map -%}
    {%- set vlan_index = loop.index0 -%}
    {%- for ip in vlan.tcp -%}
        {%- if standalone_minio is not defined -%}
            {%- if groups['servers'] | length == 1 or min_subsystem_list[vlan_index] == min_subsystem -%}
                {{ ' ' }}http://{{ ip }}:{{ minio_port }}/dev/nvme{{ '{' }}{{ subsys_range[vlan_index].min }}...{{ subsys_range[vlan_index].max }}{{ '}' }}n1
            {%- endif -%}
        {%- else -%}
            {%- for mountpoint in range(subsys_range[vlan_index].min | int, subsys_range[vlan_index].max | int + 1) -%}
                {{ ' ' }}/dev/nvme{{ mountpoint }}n1
            {%- endfor -%}
        {%- endif -%}
    {%- endfor -%}
{%- endfor -%}
{{ ' ' }}| grep -v 'Pool count' --line-buffered
