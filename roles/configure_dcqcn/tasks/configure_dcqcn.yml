#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Get list of devices for {{ vlan_label }}
  include_role:
    name: get_vlan_devices
  vars:
    device_type: ibdev
    vlan_list: "{{ configure_vlan_list }}"

- name: Query mlxconfig for {{ vlan_label }}
  command: "mlxconfig -d {{ ibdev_device }} q"
  changed_when: false
  register: mlxconfig
  loop: "{{ vlan_device_list }}"
  loop_control:
    loop_var: ibdev_device
  become: true

- name: Set ROCE_CC_PRIO_MASK_P1 for {{ vlan_label }}
  command: "mlxconfig -d {{ item.ibdev_device }} -y s ROCE_CC_PRIO_MASK_P1=8"
  loop: "{{ mlxconfig.results }}"
  loop_control:
    label: "{{ item.ibdev_device }}"
  vars:
    found_setting: "{{ item.stdout | regex_search('ROCE_CC_PRIO_MASK_P1 +([^ ]+)','\\1') | first }}"
  when: found_setting != '8'
  notify: Reboot system - dcqcn
  become: true

- name: Set CNP_DSCP_P1 for {{ vlan_label }}
  command: "mlxconfig -d {{ item.ibdev_device }} -y s CNP_DSCP_P1=48"
  loop: "{{ mlxconfig.results }}"
  loop_control:
    label: "{{ item.ibdev_device }}"
  vars:
    found_setting: "{{ item.stdout | regex_search('CNP_DSCP_P1 +([^ ]+)','\\1') | first }}"
  when: found_setting != '48'
  notify: Reboot system - dcqcn
  become: true

- name: Set CNP_802P_PRIO_P1 for {{ vlan_label }}
  command: "mlxconfig -d {{ item.ibdev_device }} -y s CNP_802P_PRIO_P1=6"
  loop: "{{ mlxconfig.results }}"
  loop_control:
    label: "{{ item.ibdev_device }}"
  vars:
    found_setting: "{{ item.stdout | regex_search('CNP_802P_PRIO_P1 +([^ ]+)','\\1') | first }}"
  when: found_setting != '6'
  notify: Reboot system - dcqcn
  become: true

- name: Set PCI_WR_ORDERING for {{ vlan_label }}
  command: "mlxconfig -d {{ item.ibdev_device }} -y s PCI_WR_ORDERING=1"
  loop: "{{ mlxconfig.results }}"
  loop_control:
    label: "{{ item.ibdev_device }}"
  when:
    - item.stdout is regex("ConnectX(5|6)")
    - item.stdout is not regex('PCI_WR_ORDERING +force_relax')
  notify: Reboot system - dcqcn
  become: true
