# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Identify host kernel version
  ansible.builtin.find:
    path: "{{ artifacts_dir }}"
    patterns: 'kernel-*.rpm'
    excludes: 'devel,headers'
  delegate_to: localhost
  run_once: true
  register: kernel_version

- name: Identify kernel RPMs
  ansible.builtin.find:
    path: "{{ artifacts_dir }}"
    patterns: 'kernel-*.rpm'
  delegate_to: localhost
  run_once: true
  register: kernel_rpms

- name: Assert kernel RPMs are found
  ansible.builtin.assert:
    that: kernel_version.files | map(attribute='path') | select('search', rpm_name) | list | count > 0
    fail_msg: "{{ rpm_name }} rpm not found. Please download kernel RPM's to {{ artifacts_dir }}"
    success_msg: "Found {{ rpm_name }} RPM"
  loop: "{{ kernel_rpm_list }}"
  vars:
    rpm_name: "{{ item }}-{{ kernel_rpm_version }}"
  run_once: true

- name: Deploy kernel RPMs
  ansible.builtin.include_tasks: deploy_kernel_rpm.yml
  loop: "{{ kernel_rpm_list }}"
  loop_control:
    loop_var: kernel_rpm_item
  vars:
    rpm_name: "{{ kernel_rpm_item }}-{{ kernel_rpm_version }}"
  when: inventory_hostname in (groups['servers'] | d([]) + groups['hosts'] | d([]))

- name: Set default grub boot
  ansible.builtin.command: "grub2-set-default 'CentOS {{ dist_string }} ({{ kernel_rpm_version }}) {{ ansible_distribution_major_version }}{{ core_string }}'"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  vars:
    dist_string: "{% if ansible_distribution_major_version == '8' %}Stream{% else %}Linux{% endif %}"
    core_string: "{% if ansible_distribution_major_version == '8' %}{% else %} (Core){% endif %}"
  notify:
    - Reboot system - kernel
    - Gather facts post-reboot
  when:
    - inventory_hostname in (groups['servers'] | d([]) + groups['hosts'] | d([]))
    - ansible_kernel is version (kernel_rpm_version, '!=')
  become: true

- name: Set GRUB Commandline Options
  ansible.builtin.import_tasks: set_grub_cmdline.yml

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Assert host kernel version
  ansible.builtin.assert:
    that: ansible_kernel is version (kernel_rpm_version, '==')
    fail_msg: "Expected kernel version {{ kernel_rpm_version }} but found {{ ansible_kernel }}"
    success_msg: "Detected host kernel version {{ kernel_rpm_version }}"
  when: inventory_hostname in (groups['servers'] | d([]) + groups['hosts'] | d([]))
