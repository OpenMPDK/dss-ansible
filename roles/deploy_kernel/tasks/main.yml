#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Identify target kernel version
  find:
    path: "{{ deploy_kernel_path }}"
    patterns: 'kernel-*.rpm'
    excludes: 'devel,headers'
  delegate_to: localhost
  run_once: true
  register: kernel_version

- name: Identify kernel RPMs
  find:
    path: "{{ deploy_kernel_path }}"
    patterns: 'kernel-*.rpm'
  delegate_to: localhost
  run_once: true
  register: kernel_rpms

- name: Assert kernel RPMs are found
  assert:
    that: kernel_version.files | length > 0
    fail_msg: "No kernel RPMs found. Please download RPM's to {{ deploy_kernel_path }}"
    success_msg: "Found kernel RPMs"
  run_once: true

- name: Set target_kernel_version variable
  set_fact:
    target_kernel_version: >-
      {%- set kernel_re = 'kernel-(?!devel)(?!headers)(.+)-.+' -%}
      {%- for file in kernel_version.files -%}
        {%- if file.path is regex(kernel_re) -%}
          {{ file.path | regex_search(kernel_re, '\1') | first }}
        {%- endif -%}
      {%- endfor -%}

- name: Assert target_kernel_version is defined
  assert:
    that: target_kernel_version is defined

- name: Set GRUB Commandline Options
  import_tasks: set_grub_cmdline.yml

- name: Deploy Kernel
  import_tasks: deploy_kernel.yml
  when: ansible_kernel is version (target_kernel_version, '!=')

- meta: flush_handlers

- name: Assert target kernel version
  assert:
    that: ansible_kernel is version (target_kernel_version, '==')
    fail_msg: "Expected kernel version {{ target_kernel_version }} but found {{ ansible_kernel }}"
    success_msg: "Detected target kernel version {{ target_kernel_version }}"
