---

- name: Query ConnectX Devices (ibdev2netdev)
  command: ibdev2netdev -v
  changed_when: false
  register: mlx_list

- name: Assert ConnectX devices are present
  assert:
    that: mlx_list.stdout_lines | length > 0
    fail_msg: "Found 0 ConnectX devices"
    success_msg: "Found {{ mlx_list.stdout_lines | length }} devices"

- name: Create list of ConnectX device dict
  set_fact:
    mellanox_devices: "{{ mellanox_devices | default([]) +
                        [{'hw_addr': hw_addr,
                          'ibdev': ibdev_val,
                          'ConnectX': connectx_val | int,
                          'fw': fw_val,
                          'netdev': netdev_val,
                          'status': status_val }] }}"
  loop: "{{ mlx_list.stdout_lines }}"
  loop_control:
    label: "{{ ibdev_val }}"
  vars:
    mlx_regex: '([^ ]+) (mlx[\d]_[\d])(?:.+ConnectX-(\d))?.+fw ([^ ]+).+ ==> ([^ ]+) \((Up|Down)\)'
    hw_addr: "{{ item | regex_search(mlx_regex, '\\1') | first }}"
    ibdev_val: "{{ item | regex_search(mlx_regex, '\\2') | first }}"
    connectx_val: "{{ item | regex_search(mlx_regex, '\\3') | first }}"
    fw_val: "{{ item | regex_search(mlx_regex, '\\4') | first }}"
    netdev_val: "{{ item | regex_search(mlx_regex, '\\5') | first }}"
    status_val: "{{ item | regex_search(mlx_regex, '\\6') | first }}"

- name: Get NUMA for each adapter
  slurp:
    src: "/sys/class/net/{{ item.netdev }}//device/numa_node"
  loop: "{{ mellanox_devices }}"
  loop_control:
    label: "{{ item.ibdev }}"
  register: numas

- name: Set mellanox devices list with numa
  set_fact:
    mellanox_devices_numa: "{{ mellanox_devices_numa | default([]) +
                              [{'hw_addr': item.0.hw_addr,
                                'ibdev': item.0.ibdev,
                                'ConnectX': item.0.ConnectX | int,
                                'fw': item.0.fw,
                                'netdev': item.0.netdev,
                                'status': item.0.status,
                                'numa': item.1.content | b64decode | first | int }] }}"
  with_together:
    - "{{ mellanox_devices }}"
    - "{{ numas.results }}"
  loop_control:
    label: "{{ item.0.ibdev }}"

- name: Set sorted list of ConnectX ports
  set_fact:
    mellanox_ports: "{{ mellanox_devices_numa | sort(attribute='ibdev') | sort(attribute='hw_addr') | sort(attribute='numa') }}"
