# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Get name of local Fabric Mananger RPM
  find:
    path: "{{ inventory_dir }}/artifacts/"
    patterns: 'ufm-*.rpm'
  delegate_to: localhost
  run_once: true
  register: ufm_rpm

- name: Get name of local Fabric Mananger Broker RPM
  find:
    path: "{{ inventory_dir }}/artifacts/"
    patterns: 'ufmbroker-*.rpm'
  delegate_to: localhost
  run_once: true
  register: ufmbroker_rpm

- name: Fail if packages are missing
  fail:
    msg: "Missing UFM packages. Check `{{ inventory_dir }}/artifacts` and execute build scripts if empty."
  delegate_to: localhost
  run_once: true
  when: >
    ufm_rpm.files[0].path is undefined or
    ufmbroker_rpm.files[0].path is undefined

- name: Identify newest version of RPMs found
  set_fact:
    ufm_rpm_file: "{{ (ufm_rpm.files | sort(attribute='ctime', reverse=true) | first).path }}"
    ufmbroker_rpm_file: "{{ (ufmbroker_rpm.files | sort(attribute='ctime', reverse=true) | first).path }}"
  run_once: true

- name: Check if UFM RPMs are installed
  shell: "rpm -qa | grep {{ item | basename | splitext | first }}"
  args:
    warn: false
  register: ufm_rpm_qa
  loop:
    - "{{ ufm_rpm_file }}"
    - "{{ ufmbroker_rpm_file }}"
  changed_when: false
  failed_when: false

- name: Set ufm_rpms_missing var
  set_fact:
    ufm_rpms_missing: >-
      {%- set count = [] -%}
      {%- for file in ufm_rpm_qa.results -%}
        {%- if file.rc != 0 -%}
          {%- if count.append(1) %}{% endif -%}
        {%- endif -%}
      {%- endfor -%}
      {{ count | length }}

- name: Install FabricManager - CentOS
  import_tasks: ufm_centos.yml
  when:
    - ansible_os_family == 'RedHat'
    - ufm_rpms_missing | int > 0

- name: Start Services
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  loop:
    - ufm
    - ufm_api
  become: true

- name: Check that UFM services are running
  service:
    name: "{{ item }}"
  register: service_status
  failed_when: service_status.status.ActiveState != "active"
  loop:
    - ufm_etcd
    - ufm
    - ufm_msg_broker.service
    - ufm_api

- name: Delete RPM files from Fabric Mananger Hosts
  file:
    path: "{{ ufm_staging_dir }}/{{ item | basename }}"
    state: absent
  loop:
    - "{{ ufm_rpm_file }}"
    - "{{ ufmbroker_rpm_file }}"
  loop_control:
    label: "{{ ufm_staging_dir }}/{{ item | basename }}"
