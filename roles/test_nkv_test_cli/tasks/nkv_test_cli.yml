---

- name: Execute nkv_test_cli command
  command: >
      {{ test_nkv_test_cli_dir }}/dss_host.py
      verify_nkv_cli
      -c n{{ ansible_loop.index}}
      -a {{ vlan.ip_prefix }}
      -m {{ vlan.numa }}
      -o {{ operation }}
  args:
    chdir: "{{ test_nkv_test_cli_dir }}"
  loop: "{{ rocev2_numa_prefix_list }}"
  loop_control:
    loop_var: vlan
    label: "{{ vlan.ip_prefix }}"
    extended: true
  async: 120
  poll: 0
  register: nkv_test_cli_async
  become: true

- name: Check async nkv_test_cli command
  async_status:
    jid: "{{ async_task.ansible_job_id }}"
  register: async_results
  until: async_results.finished
  retries: 60
  delay: 5
  loop: "{{ nkv_test_cli_async.results }}"
  loop_control:
    loop_var: async_task
    label: "{{ async_task.vlan.ip_prefix }}"
  become: true

- name: Assert async nkv_test_cli completion
  assert:
    that: async_result.finished != 0
    fail_msg: "nkv_test_cli did not complete in time"
    quiet: true
  loop: "{{ async_results.results }}"
  loop_control:
    loop_var: async_result
    label: "{{ async_result.cmd | join(' ') }}"

- name: Initialize bandwidth vars
  set_fact:
    bandwidth: 0
    combined_bandwidth: 0

- name: Set bandwidth
  set_fact:
    bandwidth: "{{ (bandwidth | float) + (async_result.stdout | regex_search(nkv_re, '\\1') | first | float) }}"
  vars:
    nkv_re: >-
      BW = ([^ ]+) GB/s
  loop: "{{ async_results.results }}"
  loop_control:
    loop_var: async_result
    label: "{{ async_result.cmd | join(' ') }}"

- name: Set combined_bandwidth
  set_fact:
    combined_bandwidth: "{{ (combined_bandwidth | float) + (hostvars[host].bandwidth | float) }}"
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: host
  run_once: true
