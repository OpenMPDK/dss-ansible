#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Execute nkv_test_cli command
  command: "{{ nkv_test_cli_command }}"
  args:
    chdir: "{{ nkv_sdk_bin_dir }}"
  loop: "{{ rocev2_numa_prefix_list }}"
  loop_control:
    loop_var: vlan
    label: "{{ nkv_test_cli_command }}"
    extended: true
  vars:
    nkv_test_cli_command: >-
      /usr/bin/python2 {{ nkv_sdk_bin_dir }}/dss_host.py
      verify_nkv_cli
      -c nkv_config_{{ vlan.ip }}.json
      -a {{ vlan.ipv4_prefix }}
      -m {{ vlan.numa }}
      -o {{ operation }}
      {% if ansible_virtualization_role == 'guest' %}-n 100{% endif %}
  async: 300
  poll: 0
  register: nkv_test_cli_async
  become: true

- name: Check async nkv_test_cli command
  async_status:
    jid: "{{ async_task.ansible_job_id }}"
  register: async_results
  until: async_results.finished
  retries: 60
  delay: 5
  loop: "{{ nkv_test_cli_async.results }}"
  loop_control:
    loop_var: async_task
    label: "{{ async_task.vlan.ipv4_prefix }}"
  become: true

- name: Assert async nkv_test_cli completion
  assert:
    that: async_result.finished != 0
    fail_msg: "nkv_test_cli did not complete in time"
    quiet: true
  loop: "{{ async_results.results }}"
  loop_control:
    loop_var: async_result
    label: "{{ async_result.cmd | join(' ') }}"

- name: Initialize bandwidth vars
  set_fact:
    bandwidth: 0
    combined_bandwidth: 0

- name: Set bandwidth
  set_fact:
    bandwidth: "{{ (bandwidth | float) + (async_result.stdout | regex_search(nkv_re, '\\1') | first | float) }}"
  vars:
    nkv_re: >-
      BW = ([^ ]+) GB/s
  loop: "{{ async_results.results }}"
  loop_control:
    loop_var: async_result
    label: "{{ async_result.cmd | join(' ') }}"

- name: Set combined_bandwidth
  set_fact:
    combined_bandwidth: "{{ (combined_bandwidth | float) + (hostvars[host].bandwidth | float) }}"
  loop: "{{ host_hostnames }}"
  loop_control:
    loop_var: host
  run_once: true
