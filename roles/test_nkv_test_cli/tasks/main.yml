# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, 
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Set target/host group vars
  set_fact:
    target_hostnames: "{{ (groups['servers'] | d([]) + groups['targets'] | d([])) | unique }}"
    host_hostnames: "{{ (groups['servers'] | d([]) + groups['hosts'] | d([])) | unique }}"

- name: Get RoCEv2 IP lists and NUMA
  include_tasks: get_ip_numa.yml
  when: inventory_hostname in host_hostnames

- name: Execute nkv_test_cli put
  include_tasks: nkv_test_cli.yml
  vars:
    operation: "{{ test_nkv_test_cli_put }}"
  when: inventory_hostname in host_hostnames

- name: Set put_throughput
  set_fact:
    put_throughput: "{{ combined_throughput }}"
  when: inventory_hostname in host_hostnames

- name: Start Compaction
  include_role:
    name: start_compaction
  when:
    - inventory_hostname in target_hostnames
    - dss_target_mode is search('kv_block')

- name: Execute nkv_test_cli get
  include_tasks: nkv_test_cli.yml
  vars:
    operation: "{{ test_nkv_test_cli_get }}"
  when: inventory_hostname in host_hostnames

- name: Set get_throughput
  set_fact:
    get_throughput: "{{ combined_throughput }}"
  when: inventory_hostname in host_hostnames

- name: Execute nkv_test_cli delete
  include_tasks: nkv_test_cli.yml
  vars:
    operation: "{{ test_nkv_test_cli_delete }}"
  when: inventory_hostname in host_hostnames

- name: Start Compaction
  include_role:
    name: start_compaction
  when:
    - inventory_hostname in target_hostnames
    - dss_target_mode is search('kv_block')

- name: Print throughput
  debug:
    msg: |
      Put throughput:    {{ '%0.2f' | format(put_throughput | float) }} GB/s
      Get throughput:    {{ '%0.2f' | format(get_throughput | float) }} GB/s
  run_once: true
  when: inventory_hostname in host_hostnames
