#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Set Hugepages vars for VMs
  set_fact:
    num_2mb_hugepages: 12288
    num_1gb_hugepages: 0
  when: ansible_virtualization_role == "guest"

- name: Set Hugepages vars for physical hosts
  set_fact:
    num_2mb_hugepages: 12288
    num_1gb_hugepages: 200
  when: ansible_virtualization_role == "host"

- name: Check 2MB hugepages
  command: cat /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
  changed_when: false
  register: current_2mb_hugepages

- name: Check 1GB hugepages
  command: cat /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages
  changed_when: false
  register: current_1gb_hugepages

- name: Assert host has sufficient memory to allocate hugepages
  assert:
    that: free_memory_plus_current_hugepages | int > (num_2mb_hugepages | int * 2) + (num_1gb_hugepages | int * 1024)
    fail_msg: |
      Currently allocated hugepages: {{ current_total_hugepages_mb }} MB
      Memory needed for hugepages allocation: {{ (num_2mb_hugepages | int * 2) + (num_1gb_hugepages | int * 1024) }} MB
      Free memory available: {{ ansible_memfree_mb }} MB
    success_msg: |
      Currently allocated hugepages: {{ current_total_hugepages_mb }} MB
      Memory needed for hugepages allocation: {{ (num_2mb_hugepages | int * 2) + (num_1gb_hugepages | int * 1024) }} MB
      Free memory available: {{ ansible_memfree_mb }} MB
  vars:
    current_1gb_hugepages_mb: "{{ current_1gb_hugepages.stdout | int * 1024 }}"
    current_2mb_hugepages_mb: "{{ current_2mb_hugepages.stdout | int * 2 }}"
    current_total_hugepages_mb: "{{ current_1gb_hugepages_mb | int + current_2mb_hugepages_mb | int }}"
    free_memory_plus_current_hugepages: "{{ ansible_memfree_mb | int + current_total_hugepages_mb | int }}"

- name: Zero 2MB hugepages
  shell: echo 0 >  /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
  when:
    - current_2mb_hugepages.stdout | int != num_2mb_hugepages
    - current_2mb_hugepages.stdout | int != 0
  become: true

- name: Zero 1GB hugepages
  shell: echo 0 >  /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages
  when:
    - current_1gb_hugepages.stdout | int != num_1gb_hugepages
    - current_1gb_hugepages.stdout | int != 0
  become: true

- name: Set GRUB_CMDLINE_LINUX hugepages options
  lineinfile:
    path: /etc/default/grub
    state: present
    backrefs: true
    regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]hugepagesz={{ grub.match }} hugepages=).)*)(?:[" ]hugepagesz={{ grub.match }} hugepages=\S+)?(.*")$'
    line: '\1 {{ grub.set }}\2'
  loop:
    - match: 1G
      set: "hugepagesz=1G hugepages={{ num_1gb_hugepages }}"
    - match: 2M
      set: "hugepagesz=2M hugepages={{ num_2mb_hugepages }}"
  loop_control:
    loop_var: grub
    label: "{{ grub.match }}"
  notify:
    - Identify UEFI boot for hugepages
    - Execute grub2-mkconfig for hugepages
  become: true

- meta: flush_handlers
