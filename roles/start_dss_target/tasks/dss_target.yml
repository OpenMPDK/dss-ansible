---

- name: Identify kvssd firmware
  include_role:
    name: identify_kvssd_firmware
  when: target_fw_version is not defined

- name: Get RoCEv2 IP Address
  include_role:
    name: get_vlan_ips
  vars:
    vlan_list: "{{ rocev2_vlans }}"

- name: Assert that at least one RoCEv2 IP is present
  assert:
    that: vlan_ip_list is defined
    fail_msg: "No RoCEv2 IPs configured on any Mellanox adapter. Please configure at least one IP to deploy target."
    success_msg: "RoCEv2 IP(s) detected."

- name: Configure target with dss_target.py
  command: >
      ./dss_target.py configure -ip_addrs
      {% for ip in vlan_ip_list %}{{ ip }}{% if not loop.last %} {% endif %}{% endfor %}
      -kv_fw {{ target_fw_version }}
      -kv_ssc {{ num_subsystems }}
  args:
    chdir: "{{ start_dss_target_dest_dir }}/bin"
  register: dss_target_configure
  become: true  # noqa 301

- name: Assert dss_target.py success
  assert:
    that:
      - "'drive setup to system is done' in dss_target_configure.stdout"
      - "'hugepage setup is done' in dss_target_configure.stdout"
      - "'drive setup to userspace is done' in dss_target_configure.stdout"
    success_msg: "dss_target.py successfully configured target"
    fail_msg: "dss_target.py failed to configure target"
  when: dss_target_configure.changed  # noqa 503

- name: Save output of dss_target.py
  copy:
    content: "{{ dss_target_configure.stdout }}"
    dest: "{{ start_dss_target_dest_dir }}/bin/dss_target.out"
  become: true
