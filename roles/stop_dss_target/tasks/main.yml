---

- name: Install target runtime dependencies
  yum:
    name: "{{ item }}"
  loop:
    - python-pip
  become: true

- name: Upgrade pip
  pip:
    name: "pip=={{ pip2_version }}"
  become: true

- name: Install netifaces python dependency
  pip:
    name: netifaces
  become: true

- name: Find running target process
  command: "pgrep reactor_"
  register: nvmf_ps
  changed_when: false
  failed_when: false

- name: Kill target processes
  command: "kill -2 {{ pid }}"
  register: kill_nvmf
  changed_when: kill_nvmf.stdout is not search('No such process')
  failed_when: false
  loop: "{{ nvmf_ps.stdout_lines }}"
  loop_control:
    loop_var: pid
  become: true

- name: Wait for nvmf_tgt process to stop
  command: "pgrep reactor_"
  register: postnvmf_ps
  until: postnvmf_ps.rc != 0
  retries: 120
  delay: 5
  changed_when: false
  failed_when: false

- name: Kill -9 stuck target processes
  command: "kill -9 {{ pid }}"
  register: kill9_nvmf
  changed_when: kill9_nvmf.stdout is not search('No such process')
  failed_when: true
  loop: "{{ nvmf_ps.stdout_lines }}"
  loop_control:
    loop_var: pid
  when: postnvmf_ps.failed
  become: true

- name: Wait for nvmf_tgt process to stop after kill -9
  command: "pgrep reactor_"
  register: postnvmf_ps9
  until: postnvmf_ps9.rc != 0
  retries: 120
  delay: 5
  changed_when: false
  failed_when: false
  when: postnvmf_ps.failed

- name: Stat DSS Target path
  stat:
    path: "{{ stop_dss_target_bin_dir }}"
  register: dss_target_path

- name: Move disks back to kernel mode (spdk reset)
  command: ./dss_target.py reset
  args:
    chdir: "{{ stop_dss_target_bin_dir }}"
  register: target_reset
  changed_when: target_reset.stdout is search('uio_pci_generic -> nvme')
  when: dss_target_path.stat.exists
  become: true

- name: Remove target config files
  file:
    path: "{{ stop_dss_target_bin_dir }}/{{ dss_file }}"
    state: absent
  loop:
    - "{{ dss_target_conf_file }}"
    - "{{ stop_dss_target_bin_dir }}/dss_target.out"
  loop_control:
    loop_var: dss_file
  become: true
