#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Enable epel-release extras repo (yum)
  yum:
    name: epel-release
    enablerepo: extras
    state: present
  become: yes

- name: Install target runtime dependencies
  yum:
    name: "{{ item }}"
  loop:
    - tbb-devel
    - libaio-devel
    - python-pip
    - python3
    - sysstat
    - Judy
  become: true

- name: Upgrade pip
  pip:
    name: "pip=={{ pip2_version }}"
  become: true

- name: Install netifaces python dependency
  pip:
    name: netifaces
  become: true

- name: Identify target tarball
  find:
    path: "{{ deploy_dss_target_path }}"
    patterns: 'nkv-target*.tgz'
  delegate_to: localhost
  run_once: true
  register: target_tgz

- name: Assert target tarball found
  assert:
    that: target_tgz.files | length > 0
    fail_msg: "No target tarball found. Please download tarball to {{ deploy_dss_target_path }}"

- name: Create target destination path
  file:
    path: "{{ deploy_dss_target_dest_dir }}"
    state: directory
    mode: 0555
  become: true

- name: Deploy target from tarball
  unarchive:
    src: "{{ (target_tgz.files | sort(attribute='ctime', reverse=true) | first).path }}"
    dest: "{{ deploy_dss_target_dest_dir }}"
    extra_opts: [--strip-components=1]
    owner: root
    group: root
    mode: 0555
  become: true

- name: Create log dir
  file:
    path: "{{ dss_log_dir }}"
    state: directory
    mode: 0755
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
  become: true

- name: Create conf dir
  file:
    path: "{{ dss_target_conf_dir }}"
    state: directory
    mode: 0755
  become: true
