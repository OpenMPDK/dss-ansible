# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Install epel-release repo
  include_role:
    name: deploy_epel

- name: Install yum dependencies
  yum:
    name:
      - python3
      - python3-pip
      - python3-devel
  become: true

- name: Identify client tarball
  find:
    path: "{{ artifacts_dir }}"
    patterns: 'dss_client*.tgz'
  delegate_to: localhost
  run_once: true
  register: client_tgz

- name: Assert client tarball found
  assert:
    that: client_tgz.files | length > 0
    fail_msg: "No client tarball found. Please download tarball to {{ artifacts_dir }}"
    success_msg: "Found client tarball"
  run_once: true

- name: Create client library destination path
  file:
    path: "{{ client_library_dir }}"
    state: directory
    mode: 0755
  become: true

- name: Deploy client library from tarball
  unarchive:
    src: "{{ (client_tgz.files | sort(attribute='mtime', reverse=true) | first).path }}"
    dest: "{{ client_library_dir }}"
    owner: root
    group: root
    mode: 0555
  become: true

- name: Get python3 platform lib dir
  command: python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(True))"
  register: python3_platform_lib_dir
  changed_when: false

- name: Get python3 lib dir
  command: python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"
  register: python3_lib_dir
  changed_when: false

- name: Set symlink for dss.cpython-36m-x86_64-linux-gnu.so
  file:
    src: "{{ client_library_dir }}/dss.cpython-36m-x86_64-linux-gnu.so"
    dest: "{{ python3_platform_lib_dir.stdout }}/dss.cpython-36m-x86_64-linux-gnu.so"
    state: link
    force: true
  become: true

- name: Remove dss.cpython-36m-x86_64-linux-gnu.so from python3 lib dir if different from platform lib dir
  file:
    dest: "{{ python3_lib_dir.stdout }}/dss.cpython-36m-x86_64-linux-gnu.so"
    state: absent
  when: python3_lib_dir.stdout != python3_platform_lib_dir.stdout
  become: true

- name: Set symlink for libdss.so
  file:
    src: "{{ client_library_dir }}/libdss.so"
    dest: "/usr/local/lib64/libdss.so"
    state: link
    force: true
  become: true
