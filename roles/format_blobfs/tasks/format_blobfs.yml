#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Create format_disks.sh script
  template:
    src: format_disks.sh.j2
    dest: "{{ start_dss_target_dest_dir }}/bin/format_disks.sh"
    mode: 0751
  register: create_format_disks_template
  become: true

- name: Execute format_disks.sh script
  shell: ./format_disks.sh > format_disks.out 2>&1
  register: execute_format_disks
  args:
    chdir: "{{ start_dss_target_dest_dir }}/bin"
  when: >
    (create_format_disks_template.changed or
    create_blobfs_conf.changed)
  become: true

- name: Read output of format_disks.sh
  command: "cat {{ start_dss_target_dest_dir }}/bin/format_disks.out"
  changed_when: false
  when: execute_format_disks is not skipped
  register: format_disks

- name: Find blobfs conf files
  find:
    paths: "{{ dss_target_conf_dir }}"
    patterns: blobfs.mkfs.in.*.conf
  register: blobfs_confs

- name: Assert filesystem initialized successfully
  assert:
    that: format_disks.stdout is not search('Failed to initialize filesystem')
    fail_msg: |
      Failed to initialize filesystem.
      Check {{ start_dss_target_dest_dir }}/bin/format_disks.out for details.
  when: format_disks is not skipped
