# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Get spdk status
  ansible.builtin.command: ./setup.sh status
  changed_when: false
  args:
    chdir: "{{ target_dir }}/scripts"
  register: spdk_status
  become: true

- name: Assert disks in SPDK mode
  ansible.builtin.assert:
    that: >
     spdk_status.stdout is search('uio_pci_generic') or
     spdk_status.stdout is search('vfio-pci')
    msg: Cannot format BlobFS. Disks are not in SPDK mode. Start DSS software first.

- name: Stat dss_formatter
  ansible.builtin.stat:
    path: "{{ target_dir }}/bin/dss_formatter"
  register: dss_formatter

- name: Stat nvmf.in.conf
  ansible.builtin.stat:
    path: "{{ target_conf_file }}"
  register: nvmf_in_conf

- name: Assert nvmf.in.conf found
  ansible.builtin.assert:
    that: nvmf_in_conf.stat.exists
    msg: nvmf.in.conf not found. Start DSS software first.

- name: Find NVMe PCIe addresses in nvmf.in.conf
  ansible.builtin.command: >
    grep 'TransportID "trtype:PCIe traddr' {{ target_conf_file }}
  register: pcie_addrs
  changed_when: false
  failed_when: false

- name: Assert PCIe addresses found
  ansible.builtin.assert:
    that: pcie_addrs.stdout_lines | length > 0
    msg: |
      Disk serial numbers not found in blobfs.mkfs.in.conf for firmware {{ target_fw_version }}.
      Please verify that 'target_fw_version' var matches desired firmware.
      Execute 'stop_reset_dss_software' playbook to put disks back into kernel mode.
      Then verify desired SSD firmware version.

- name: Create KV Filesystem scripts for each device
  ansible.builtin.template:
    src: kvfs.mkfs.in.conf.j2
    dest: "{{ target_conf_dir }}/{{ format_type }}-{{ ansible_loop.index0 }}.conf"
    mode: 0644
  loop: "{{ pcie_addrs.stdout_lines }}"
  loop_control:
    extended: true
  register: create_kvfs_conf
  become: true

- name: Create filesystem for KV-Block
  ansible.builtin.include_tasks: format_kvfs.yml
  when: dss_target_mode is search('kv_block')
