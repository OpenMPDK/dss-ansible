# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Collect ansible_facts
  ansible.builtin.include_tasks: collect_ansible_facts.yml

- name: Collect dmesg
  ansible.builtin.include_tasks: collect_dmesg.yml

- name: Collect SPDK status
  ansible.builtin.include_tasks: collect_spdk_status.yml
  when: inventory_hostname in target_hostnames

- name: Collect DSS logs dir
  ansible.builtin.include_tasks: collect_dss_logs.yml

- name: Collect DSS config dir
  ansible.builtin.include_tasks: collect_dss_config.yml

- name: Collect nkv_config json files
  ansible.builtin.include_tasks: collect_nkv_config.yml

- name: Collect host config script and MinIO startup scripts
  ansible.builtin.include_tasks: collect_host_scripts.yml

- name: Collect target setup script, dss_target.py output, and mkfs_blobfs output
  ansible.builtin.include_tasks: collect_target_scripts.yml

- name: Collect coredumps
  ansible.builtin.include_tasks: collect_coredumps.yml
  when: collect_coredumps | bool

- name: Collect /etc/hosts
  ansible.builtin.include_tasks: collect_etc_hosts.yml

- name: Collect numactl
  ansible.builtin.include_tasks: collect_numactl.yml

- name: Collect ansible log
  ansible.builtin.include_tasks: collect_ansible_log.yml

- name: Collect binaries
  ansible.builtin.include_tasks: collect_binaries.yml
  when: collect_binaries | bool

- name: Create support bundle tarball
  ansible.builtin.archive:
    path: "{{ local_coredump_dir }}/{{ inventory_hostname }}"
    dest: "{{ local_coredump_dir }}/{{ ansible_date_time.epoch }}-{{ inventory_hostname_short }}-{{ coredump_suffix_name }}.tgz"
    mode: 0755
  delegate_to: localhost

- name: Remove support bundle temp files
  ansible.builtin.file:
    path: "{{ local_coredump_dir }}/{{ inventory_hostname }}"
    state: absent
  delegate_to: localhost

- name: Remove coredumps
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ coredumps.files }}"
  loop_control:
    label: "{{ item.path }}"
  when: collect_coredumps | bool
  become: true
