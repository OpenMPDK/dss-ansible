# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, 
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

# Needed if OFED not installed
- name: Install iproute
  yum:
    name: "iproute{% if ansible_distribution_version == '8' %}-tc{% endif %}"
  become: true

- name: Get all RoCEv2 IP Addresses
  include_role:
    name: get_vlan_ips
  vars:
    vlan_list: "{{ rocev2_vlans }}"
  when: rocev2_ip_list is not defined

- name: Set rocev2_ip_list var
  set_fact:
    rocev2_ip_list: "{{ vlan_ip_list }}"
  when: rocev2_ip_list is not defined

- name: Query adapters
  command: "ip address show"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  changed_when: false
  register: up_adapters

- name: Set matching_device_list var
  set_fact:
    matching_device_list: >-
      {{ matching_device_list | default([]) }}
      {%- for rocev2_ip in rocev2_ip_list -%}
        {%- for adapter in up_adapters.stdout_lines -%}
          {%- set vlan_dev_check = adapter | regex_search(adapter_re) -%}
          {%- if vlan_dev_check != '' -%}
            {%- set vlan_dev = adapter | regex_search(adapter_re, '\\1') -%}
            {%- if vlan_dev is iterable and (vlan_dev is not string and vlan_dev is not mapping) -%}
              {%- set lookup_dev = 'ansible_' ~ vlan_dev | first | replace('-', '_') -%}
              {%- if (adapter is regex(adapter_re)) and
                (lookup('vars', lookup_dev).ipv4.address is defined) and
                (lookup('vars', lookup_dev).ipv4.address == rocev2_ip) -%}
                + {{ [ vlan_dev | first ] }}
              {%- else -%}
                + []
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endfor -%}
  vars:
    adapter_re: '^[\d]+: ([^@:]+)(@([^:]+))?:'

- name: Get packet pacing status
  command: "tc qdisc show dev {{ item }}"
  changed_when: false
  register: packet_pacing_status
  loop: "{{ matching_device_list }}"
  become: true

- name: Delete packet pacing rules
  command: "tc qdisc del dev {{ matching_device }} root"
  register: qdisc_del_dev
  loop: "{{ packet_pacing_status.results }}"
  loop_control:
    label: "{{ matching_device }}"
  vars:
    matching_device: "{{ item.item }}"
  when: item.stdout is not search('noqueue')
  failed_when:
    - qdisc_del_dev.rc !=0
    - qdisc_del_dev.stderr is not search('No such file or directory')
  changed_when: qdisc_del_dev.stderr is not search('No such file or directory')
  become: true
