#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Init vars
  set_fact:
    target_hostnames: "{{ (groups['servers'] | d([]) + groups['targets'] | d([])) | unique }}"
    host_hostnames: "{{ (groups['servers'] | d([]) + groups['hosts'] | d([])) | unique }}"

- name: Get all RoCEv2 IP Addresses
  include_role:
    name: get_vlan_ips
  vars:
    vlan_list: "{{ rocev2_vlans }}"
  when: rocev2_ip_list is not defined

- name: Set rocev2_ip_list var if IP's auto-discovered
  set_fact:
    rocev2_ip_list: "{{ vlan_ip_list }}"
  when: rocev2_ip_list is not defined

- name: Set rocev2_alias_map var
  set_fact:
    rocev2_alias_map: "{{ rocev2_alias_map | d([]) }} +
      [
        {
          'alias': '{{ item.0.alias }}',
          'rocev2_ip': '{{ item.1 }}'
        }
      ]"
  with_together:
    - "{{ tcp_alias_list }}"
    - "{{ rocev2_ip_list }}"
  loop_control:
    label: "{{ item.0.alias }}"
  when: inventory_hostname in host_hostnames

- name: Read local DSS conf
  command: "cat {{ dss_target_conf_dir }}/client_library_conf.json"
  register: local_dss_conf
  run_once: true
  delegate_to: "{{ host_hostnames[0] }}"
  changed_when: false

- name: Set cluster_num_list var
  set_fact:
    cluster_num_list: "{{ cluster_num_list | default([]) }} +
      [
        {% for host in ansible_play_hosts %}
            '{{ hostvars[host].cluster_num | d(cluster_num) }}'{% if not loop.last %},{% endif %}
        {% endfor %}
      ]"
  when: cluster_num_list is not defined
  run_once: true

- name: Check subsystems are mounted
  include_tasks: check_subsystems.yml
  loop: "{{ cluster_num_list | unique }}"
  loop_control:
    loop_var: current_cluster_num
  when: current_cluster_num | string == cluster_num | string

- name: Cleanup MinIO
  include_tasks: cleanup_minio.yml
  loop: "{{ (local_dss_conf.stdout | from_json).clusters }}"
  loop_control:
    label: "{{ first_endpoint }}"
  vars:
    endpoints: "{{ item.endpoints }}"
    first_endpoint: "{{ endpoints[0].ipv4 }}"
    rocev2_ip: "{{ (rocev2_alias_map | selectattr('alias', 'equalto', first_endpoint) | first).rocev2_ip }}"
  when:
    - inventory_hostname in host_hostnames
    - first_endpoint in tcp_alias_list | map(attribute='alias') | list
