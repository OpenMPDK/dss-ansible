# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Get list of Mellanox ports
  ansible.builtin.include_role:
    name: get_mlnx_ports

- name: Initialize vlan_device_list variable
  ansible.builtin.set_fact:
    vlan_device_list: []

- name: Append device to vlan_device_list
  ansible.builtin.set_fact:
    vlan_device_list: "{{ vlan_device_list | default([]) + [ device ] }}"
  with_nested:
    - "{{ vlan_list }}"
    - "{{ mellanox_ports }}"
  loop_control:
    label: "{{ mellanox_device.netdev }}.{{ vlan.id }}"
  vars:
    vlan: "{{ item.0 }}"
    mellanox_device: "{{ item.1 }}"
    vlan_device: "ansible_{{ mellanox_device.netdev | replace('-', '_') }}.{{ vlan.id }}"
    device: >-
      {%- if device_type == 'netdev' -%}
        {{ mellanox_device.netdev }}
      {%- elif device_type == 'ibdev' -%}
        {{ mellanox_device.ibdev }}
      {%- elif device_type == 'netdev_child' -%}
        {{ mellanox_device.netdev }}.{{ vlan.id }}
      {%- endif -%}
  when:
    - mellanox_device.status == 'Up'
    - lookup('vars', vlan_device, default='') != ''
    - lookup('vars', vlan_device).ipv4.address is defined
