# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, 
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Assert test_vlans defined
  assert:
    that:
      - test_vlans is defined
      - (test_vlans == "tcp") or (test_vlans == "rocev2")

- name: Set selected_vlans var for rocev2
  set_fact:
    selected_vlans: "{{ rocev2_vlans }}"
  when: test_vlans == "rocev2"

- name: Set selected_vlans var for tcp
  set_fact:
    selected_vlans: "{{ tcp_vlans }}"
  when: test_vlans == "tcp"

- name: Get IP Addresses
  include_role:
    name: get_vlan_ips
  vars:
    vlan_list: "{{ selected_vlans }}"
  when:
    - tcp_ip_list is not defined
    - rocev2_ip_list is not defined

- name: Set vlan_ip_list for rocev2 if user-defined
  set_fact:
    vlan_ip_list: "{{ rocev2_ip_list }}"
  when:
    - rocev2_ip_list is defined
    - test_vlans == "rocev2"

- name: Set vlan_ip_list for tcp if user-defined
  set_fact:
    vlan_ip_list: "{{ tcp_ip_list }}"
  when:
    - tcp_ip_list is defined
    - test_vlans == "tcp"

- name: Assert that IP's are defined
  assert:
    that: vlan_ip_list | length > 0
    fail_msg: |
      No IPs configured on any Mellanox adapter.
      Please configure at least one IP to test ping.

- name: Initialized combined_vlan_ip_list
  set_fact:
    combined_vlan_ip_list: []
  run_once: true

- name: Set combined_vlan_ip_list
  set_fact:
    combined_vlan_ip_list: "{{ combined_vlan_ip_list | default([]) }} + {{ hostvars[host].vlan_ip_list }}"
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: host
  run_once: true

- name: Query IPs (getent)
  shell: "getent ahosts {{ item }} | awk '{ print $1 }' | grep -v '^::1' | head -n 1"
  loop: "{{ combined_vlan_ip_list }}"
  changed_when: false
  register: getent

- name: Assert getent contains routable hostnames or IPs
  assert:
    that: "{{ item.stdout | ipaddr != false }}"
    msg: "{{ item.item }} is not routable on this host"
    quiet: true
  loop: "{{ getent.results }}"
  loop_control:
    label: "{{ item.item }}"

- name: Ping all endpoints
  command: "ping {% if item.stdout | ipv6 %}-6 {% endif %}-c 1 {{ item.stdout }}"
  changed_when: false
  loop: "{{ getent.results }}"
  loop_control:
    label: "{{ item.stdout }}"
