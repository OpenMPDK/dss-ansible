# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Generate RSA key on master client
  command: "ssh-keygen -q -t rsa -f {{ rsa_key }} -N ''"
  vars:
    rsa_key: "/root/.ssh/{{ deploy_dss_benchmark_ssh_key_name }}"
  args:
    creates: "{{ rsa_key }}"
  run_once: true
  become: true

- name: Generate public RSA key on master client if missing
  command: "ssh-keygen -q -y -f {{ rsa_key }} -N '' > {{ pub_key }}"
  vars:
    rsa_key: "/root/.ssh/{{ deploy_dss_benchmark_ssh_key_name }}"
    pub_key: "{{ rsa_key }}.pub"
  args:
    creates: "{{ pub_key }}"
  run_once: true
  become: true

- name: Read master client public SSH key
  command: "cat {{ rsa_key }}.pub"
  vars:
    rsa_key: "/root/.ssh/{{ deploy_dss_benchmark_ssh_key_name }}"
  register: ssh_keys
  changed_when: false
  run_once: true
  become: true

- name: Add master client key to authorized_keys
  authorized_key:
    user: root
    key: "{{ ssh_key }}"
  delegate_to: "{{ key_host }}"
  loop: "{{ (groups['clients'] + groups['servers'] | d([]) + groups['hosts'] | d([])) | unique }}"
  loop_control:
    loop_var: key_host
  vars:
    ssh_key: "{{ ssh_keys.stdout }}"
  run_once: true
  become: true

- name: Scan machine RSA keys by TCP alias
  command: "ssh-keyscan -t rsa {{ scan_alias }}"
  register: ssh_keys_short
  loop: "{{ (groups['clients'] + groups['servers'] | d([]) + groups['hosts'] | d([])) | unique }}"
  loop_control:
    loop_var: hostname
  vars:
    scan_alias: "{{ hostvars[hostname].tcp_alias_list[0].alias }}"
  failed_when: ssh_keys.stdout == ''
  changed_when: false
  run_once: true

- name: Add all host keys to master client's known_hosts
  known_hosts:
    path: "/root/.ssh/known_hosts"
    name: "{{ host }}"
    key: "{{ item.stdout }}"
  loop: "{{ ssh_keys_short.results }}"
  loop_control:
    label: "{{ item.hostname }}"
  vars:
    host: "{{ hostvars[item.hostname].tcp_alias_list[0].alias }}"
  run_once: true
  become: true
