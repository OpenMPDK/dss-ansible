# The Clear BSD License
#
# Copyright (c) 2022 Samsung Electronics Co., Ltd.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the disclaimer
# below) provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of Samsung Electronics Co., Ltd. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY
# THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Assert datamover_operation is valid
  ansible.builtin.assert:
    that: datamover_operation in valid_operations
    msg: datamover_operation var must be one of {{ valid_operations }}
  vars:
    valid_operations:
      - PUT
      - GET
      - DEL
      - LIST
      - TEST
  run_once: true

- name: Create datamover config file
  ansible.builtin.include_role:
    name: create_datamover_conf

- name: Set datamover vars
  ansible.builtin.set_fact:
    dryrun_string: "{% if datamover_dryrun | bool %}--dryrun{% else %}{% endif %}"
    compaction_string: "{% if datamover_compaction | bool and dss_target_mode is search('kv_block') and not hpos %}--compaction yes{% else %}{% endif %}"
    data_integrity_string: "{% if datamover_data_integrity | bool %}--data_integrity{% else %}{% endif %}"
    skip_upload_string: "{% if datamover_skip_upload | bool %}--skip_upload{% else %}{% endif %}"
    prefix_string: "{% if datamover_prefix != '' %}--prefix={{ datamover_prefix }}{% else %}{% endif %}"

- name: Cleanup Datamover
  ansible.builtin.include_role:
    name: cleanup_datamover

- name: While you wait ...
  ansible.builtin.debug:
    msg: |
      Datamover is about to execute.
      This could take a very long time, depending on the size of your dataset.
      You may want to {{ item }}.
      In the mean time, you can view Datamover progress by tailing the master_application.log:
        {{ inventory_hostname }}:{{ datamover_list_path }}/master_application.log
      Client application logs can also be viewed on each [clients] host:
        {{ datamover_list_path }}/client_application.log
  run_once: true
  with_random_choice: "{{ things_to_do_while_waiting }}"
  loop_control:
    label: ''

- name: "Execute datamover - {{ datamover_operation }}"
  ansible.builtin.include_tasks: "datamover_{{ datamover_operation }}.yml"
  run_once: true

- name: Print master_application.log
  ansible.builtin.debug:
    msg: "{{ master_application.stdout }}"
  run_once: true

- name: Assert no errors in master_application.log
  ansible.builtin.assert:
    that: "item not in master_application.stdout"
    msg: Errors found in Datamover
  run_once: true
  loop:
    - ERROR
    - FATAL
