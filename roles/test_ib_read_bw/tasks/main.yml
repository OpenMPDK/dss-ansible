#  BSD LICENSE
#
#  Copyright (c) 2021 Samsung Electronics Co., Ltd.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in
#      the documentation and/or other materials provided with the
#      distribution.
#    * Neither the name of Samsung Electronics Co., Ltd. nor the names of
#      its contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---

- name: Assert more than one host
  assert:
    that: ansible_play_hosts | length > 1
    msg: Can only test ib_read_bw with more than 1 target

- name: Get ib_read_bw versions
  command: ib_read_bw --version
  changed_when: false
  failed_when: false
  register: ib_read_bw_version

- name: Assert ib_read_bw installed
  assert:
    that: ib_read_bw_version.stdout is defined
    msg: ib_read_bw is not installed. Install 'perftest' RPM.

- name: Set ib_read_bw_ver_list var
  set_fact:
    ib_read_bw_ver_list: "{{ ib_read_bw_ver_list | d([]) + [ hostvars[item].ib_read_bw_version.stdout ] }}"
  loop: "{{ ansible_play_hosts }}"
  run_once: true

- name: Assert ib_read_bw versions match
  assert:
    that: ib_read_bw_ver_list | unique | length == 1
    msg: |
      Mixed versions of ib_read_bw detected.
      Cannot test ib_read_bw between hosts running OFED and inbox infiniband driver
      {{ ib_read_bw_version.stdout }}

- name: Get RoCEv2 IP Address
  include_role:
    name: get_vlan_ips
  vars:
    vlan_list: "{{ rocev2_vlans }}"
  when: rocev2_ip_list is not defined

- name: Set rocev2_ip_list var if IP's auto-discovered
  set_fact:
    rocev2_ip_list: "{{ vlan_ip_list }}"
  when: rocev2_ip_list is not defined

- name: Assert that IP's are defined
  assert:
    that: rocev2_ip_list | length > 0
    fail_msg: |
      No IPs configured on any Mellanox adapter.
      Please configure at least one IP to test ping.

- name: Copy show_gids script
  copy:
    src: show_gids.sh
    dest: /usr/local/bin/show_gids
    mode: 0755
  become: true

- name: Query show_gids
  command: show_gids
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/sbin"
  changed_when: false
  failed_when: false
  register: gids_list
  become: true

- name: Set ib_devices var
  set_fact:
    ib_devices: "{{ ib_devices | default([]) +
                [{ 'ibdev': ibdev,
                  'gid_index': gid_index,
                  'ip_address': ip_address,
                  'netdev': netdev,
                  'vlan_index': vlan_index,
                  'hostname': inventory_hostname }] }}"
  loop: "{{ rocev2_ip_list }}"
  loop_control:
    loop_var: ip_address
    extended: true
  vars:
    gid_regex: '(mlx\d_\d+)\s+\d+\s+([\d]+)\s+[^\s+]+\s+{{ ip_address }}\s+v2\s+([\w]+)((\.\w+)?)'
    ibdev: "{{ gids_list.stdout | regex_search(gid_regex, '\\1') | first }}"
    gid_index: "{{ gids_list.stdout | regex_search(gid_regex, '\\2') | first }}"
    netdev: "{{ gids_list.stdout | regex_search(gid_regex, '\\3') | first }}"
    vlan_index: "{{ ansible_loop.index0 }}"
  when: gids_list.stdout is regex(gid_regex)

- name: Set combined_ib_devices var
  set_fact:
    combined_ib_devices: "{{ combined_ib_devices | default([]) }} + {{ hostvars[host].ib_devices }}"
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: host
  run_once: true

- name: Iterate ib_read_bw permutations
  include_tasks: ib_read_bw.yml
  vars:
    server_vlan_index: "{{ server_ib_device.vlan_index }}"
    server_ibdev: "{{ server_ib_device.ibdev }}"
    server_netdev: "{{ server_ib_device.netdev }}"
    server_hostname: "{{ server_ib_device.hostname }}"
    server_ip_address: "{{ server_ib_device.ip_address }}"
    server_gid_index: "{{ server_ib_device.gid_index }}"
  loop: "{{ combined_ib_devices }}"
  loop_control:
    loop_var: server_ib_device

- name: Assert ib_read_bw bw_avg is > 90% of link speed
  assert:
    that: ib_result.bw_avg | float >= min_linkspeed | float
    fail_msg: "Expected bw: {{ min_linkspeed }}. Actual bw: {{ ib_result.bw_avg }}"
    quiet: true
  vars:
    min_linkspeed: "{{ ib_result.server_linkspeed | float * 0.0009 }}"
  loop: "{{ combined_ib_results }}"
  loop_control:
    loop_var: ib_result
  run_once: true
  ignore_errors: true
