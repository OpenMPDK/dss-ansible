---

- name: Identify kvssd firmware
  include_role:
    name: identify_kvssd_firmware
  when: target_fw_version is not defined

- name: Query list of NVMe devices
  command: nvme list -o json
  changed_when: false
  register: nvme_list
  become: true

- name: Set kvssd_upgrade_list variable
  set_fact:
    kvssd_upgrade_list: "{{ kvssd_upgrade_list | default([]) + [ item.DevicePath ] }}"
  loop: "{{ (nvme_list.stdout | from_json).Devices }}"
  loop_control:
    label: "{{ item.DevicePath }}"
  when:
    - item.ModelNumber in kvssd_models
    - item.Firmware != target_fw_version

- name: Create KVSSD firmware staging directory
  file:
    path: "{{ upgrade_kvssd_firmware_staging_dir }}"
    state: directory
    mode: 0644
  when: kvssd_upgrade_list is defined

- name: Copy KVSSD firmware
  copy:
    src: "{{ firmware_bin.files[0].path }}"
    dest: "{{ upgrade_kvssd_firmware_staging_dir }}"
    mode: 0644
  when: kvssd_upgrade_list is defined

- name: Upgrade KVSSD firmware
  include_tasks: upgrade_kvssd_firmware.yml
  when: kvssd_upgrade_list is defined

- name: Remove KVSSD firmware staging directory
  file:
    path: "{{ upgrade_kvssd_firmware_staging_dir }}"
    state: absent

- name: Query post-upgrade list of NVMe devices
  command: nvme list -o json
  changed_when: false
  register: post_nvme_list
  become: true

- name: Assert post-upgrade firmware
  assert:
    that: item.Firmware == target_fw_version
    fail_msg: "{{ item.DevicePath }} expected firmware {{ target_fw_version }}, found {{ item.Firmware }}"
    quiet: true
  loop: "{{ (post_nvme_list.stdout | from_json).Devices }}"
  loop_control:
    label: "{{ item.DevicePath }}"
  when:
    - item.ModelNumber in kvssd_models
